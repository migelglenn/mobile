/*
 * JS for startScreen generated by Appery.io
 *
 */

Appery.getProjectGUID = function() {
    return '90672e9f-6dbf-4eb1-94ea-774aef2fcfa1';
}

function navigateTo(outcome, useAjax) {
    Appery.navigateTo(outcome, useAjax);
}

// Deprecated


function adjustContentHeight() {
    Appery.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Appery.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Appery.setDetailContent(pageUrl);
}

Appery.AppPages = [{
    "name": "startScreen",
    "location": "startScreen.html"
}];

startScreen_js = function(runBeforeShow) { /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'grid': 'startScreen_grid',
        'mobilegridcell_25': 'startScreen_mobilegridcell_25',
        'link': 'startScreen_link',
        'mobilegridcell_27': 'startScreen_mobilegridcell_27',
        'pubDate': 'startScreen_pubDate',
        'mobilegridcell_29': 'startScreen_mobilegridcell_29',
        'description': 'startScreen_description'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    if (navigator.userAgent.indexOf("IEMobile") != -1) {
        //Fixing issue https://github.com/jquery/jquery-mobile/issues/5424 on Windows Phone
        $("div[data-role=page] div[data-role=footer]").css("bottom", "-36px");
    }

    if (Appery.getTargetPlatform == "I") {
        $.each(window.n2id, function(name, id) {
            var elApperyRole = $("#" + id).attr("data-role");
            if (elApperyRole != "appery_label" && elApperyRole != "appery_link") {
                var appleDataSelector = "#" + id + "[x-apple-data-detectors], #" + id + " [x-apple-data-detectors]";
                $(appleDataSelector).attr("x-apple-data-detectors", "false");
            }
        });
    }

    Appery.CurrentScreen = 'startScreen';

    /*
     * Nonvisual components
     */
    var datasources = [];

    restservice1 = new Appery.DataSource(LifehackerRSS, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("startScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [{
            'PATH': ['rss', 'channel', 'item'],
            'ID': 'grid',
            'SET': [{
                'PATH': ['title'],
                'ID': 'link',
                'ATTR': '@'
            }, {
                'PATH': ['link'],
                'ID': 'link',
                'ATTR': 'href'
            }, {
                'PATH': ['description'],
                'ID': 'description',
                'ATTR': '@'
            }, {
                'PATH': ['pubDate'],
                'ID': 'pubDate',
                'ATTR': '@'
            }]
        }],
        'requestMapping': [{
            'PATH': ['appery-proxy-url'],
            'HEADER': true,
            'ATTR': 'http://feeds.gawker.com/lifehacker/full'
        }, {
            'PATH': ['appery-transformation'],
            'HEADER': true,
            'ATTR': 'checkTunnel'
        }, {
            'PATH': ['appery-key'],
            'HEADER': true,
            'ATTR': '1395084881133'
        }, {
            'PATH': ['appery-rest'],
            'HEADER': true,
            'ATTR': '2616531'
        }]
    });

    datasources.push(restservice1);

    restservice2 = new Appery.DataSource(accountsDB_accounts_list_service, {
        'onComplete': function(jqXHR, textStatus) {

            $t.refreshScreenFormElements("startScreen");
        },
        'onSuccess': function(data) {},
        'onError': function(jqXHR, textStatus, errorThrown) {},
        'responseMapping': [],
        'requestMapping': [{
            'PATH': ['X-Appery-Database-Id'],
            'TYPE': 'STRING',
            'HEADER': true,
            'ATTR': '{database_id}'
        }]
    });

    datasources.push(restservice2);

    /*
     * Events and handlers
     */

    // Before Show
    startScreen_beforeshow = function() {
        Appery.CurrentScreen = "startScreen";
        for (var idx = 0; idx < datasources.length; idx++) {
            datasources[idx].__setupDisplay();
        }
    }

    // On Load
    screen_3671_onLoad = startScreen_onLoad = function() {
        screen_3671_elementsExtraJS();
        try {
            restservice1.execute({})
        } catch (ex) {
            console.log(ex.name + '  ' + ex.message);
            hideSpinner();
        };

        // TODO fire device events only if necessary (with JS logic)
        startScreen_deviceEvents();
        startScreen_windowEvents();
        screen_3671_elementsEvents();
    }

    // screen window events
    screen_3671_windowEvents = startScreen_windowEvents = function() {

        $('#startScreen').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#startScreen').bind({
            pageshow: function() {
                try {
                    restservice2.execute({})
                } catch (ex) {
                    console.log(ex.name + '  ' + ex.message);
                    hideSpinner();
                };
            },
        });

    }

    // device events
    startScreen_deviceEvents = function() {

        document.addEventListener("deviceready", function() {

        });
    }

    // screen elements extra js
    screen_3671_elementsExtraJS = startScreen_elementsExtraJS = function() {
        // screen (startScreen) extra code

    }

    // screen elements handler
    screen_3671_elementsEvents = startScreen_elementsEvents = function() {

        $("a :input,a a,a fieldset label").live({
            click: function(event) {
                event.stopPropagation();
            }
        });

    }

    $("#startScreen").die("pagebeforeshow").live("pagebeforeshow", function(event, ui) {
        startScreen_beforeshow();
    });

    if (runBeforeShow) {
        startScreen_beforeshow();
    } else {
        startScreen_onLoad();
    }

}

$("#startScreen").die("pageinit").live("pageinit", function(event, ui) {
    Appery.processSelectMenu($(this));
    startScreen_js();
});